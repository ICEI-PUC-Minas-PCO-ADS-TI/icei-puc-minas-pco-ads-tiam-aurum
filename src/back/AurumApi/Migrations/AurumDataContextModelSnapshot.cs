// <auto-generated />
using System;
using AurumApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AurumApi.Migrations
{
    [DbContext(typeof(AurumDataContext))]
    partial class AurumDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AurumApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datacadastro");

                    b.Property<string>("Documento")
                        .HasColumnType("text")
                        .HasColumnName("documento");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("AurumApi.Models.EnderecoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasColumnType("text")
                        .HasColumnName("cidade");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<string>("Complemento")
                        .HasColumnType("text")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("enderecoclientes");
                });

            modelBuilder.Entity("AurumApi.Models.Joia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("ImagemPublicId")
                        .HasColumnType("text")
                        .HasColumnName("imagempublicid");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("imagemurl");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("joias");
                });

            modelBuilder.Entity("AurumApi.Models.JoiaPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoJoia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricaojoia");

                    b.Property<string>("ImagemUrlJoia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagemurljoia");

                    b.Property<int?>("JoiaId")
                        .HasColumnType("integer")
                        .HasColumnName("joiaid");

                    b.Property<string>("NomeJoia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nomejoia");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedidoid");

                    b.Property<decimal>("PrecoUnidade")
                        .HasColumnType("numeric")
                        .HasColumnName("precounidade");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric")
                        .HasColumnName("subtotal");

                    b.HasKey("Id");

                    b.HasIndex("JoiaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("joiaspedidos");
                });

            modelBuilder.Entity("AurumApi.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datapagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datavencimento");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("text")
                        .HasColumnName("formapagamento");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer")
                        .HasColumnName("numeroparcela");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("pedidoid");

                    b.Property<int>("QtdParcelas")
                        .HasColumnType("integer")
                        .HasColumnName("qtdparcelas");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("numeric")
                        .HasColumnName("valorpagamento");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("numeric")
                        .HasColumnName("valorparcela");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pagamentos");
                });

            modelBuilder.Entity("AurumApi.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datapedido");

                    b.Property<int?>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valortotal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("AurumApi.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriado")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criado");

                    b.Property<DateTime?>("DataRealizar")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_a_realizar");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tarefa");
                });

            modelBuilder.Entity("AurumApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .HasColumnType("text")
                        .HasColumnName("documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senhacriptografada");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("AurumApi.Models.Cliente", b =>
                {
                    b.HasOne("AurumApi.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AurumApi.Models.EnderecoCliente", b =>
                {
                    b.HasOne("AurumApi.Models.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AurumApi.Models.Joia", b =>
                {
                    b.HasOne("AurumApi.Models.Usuario", "Usuario")
                        .WithMany("Joias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AurumApi.Models.JoiaPedido", b =>
                {
                    b.HasOne("AurumApi.Models.Joia", "Joia")
                        .WithMany("JoiasPedidos")
                        .HasForeignKey("JoiaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AurumApi.Models.Pedido", "Pedido")
                        .WithMany("JoiasPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joia");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AurumApi.Models.Pagamento", b =>
                {
                    b.HasOne("AurumApi.Models.Cliente", "Cliente")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AurumApi.Models.Pedido", "Pedido")
                        .WithMany("Pagamentos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AurumApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AurumApi.Models.Pedido", b =>
                {
                    b.HasOne("AurumApi.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AurumApi.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AurumApi.Models.Tarefa", b =>
                {
                    b.HasOne("AurumApi.Models.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AurumApi.Models.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Pagamentos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("AurumApi.Models.Joia", b =>
                {
                    b.Navigation("JoiasPedidos");
                });

            modelBuilder.Entity("AurumApi.Models.Pedido", b =>
                {
                    b.Navigation("JoiasPedidos");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("AurumApi.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Joias");

                    b.Navigation("Pedidos");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
